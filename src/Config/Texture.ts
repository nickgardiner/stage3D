import {S3DTexturePropsMap} from "../Library/Stage3D/Class/Texture2D";

export const TextureConfig = {
    grass: {
        target: WebGLRenderingContext.TEXTURE_2D,
        level: 0,
        resource: 'grass',
        internalFormat: WebGLRenderingContext.RGB,
        format: WebGLRenderingContext.RGB,
        type: WebGLRenderingContext.UNSIGNED_BYTE,
        filterMag: WebGLRenderingContext.NEAREST_MIPMAP_NEAREST,
        filterMin: WebGLRenderingContext.NEAREST_MIPMAP_LINEAR,
        wrapS: WebGLRenderingContext.REPEAT, //CLAMP_TO_EDGE,
        wrapT: WebGLRenderingContext.REPEAT, //CLAMP_TO_EDGE,
        blend: 0,
    },
    stone: {
        target: WebGLRenderingContext.TEXTURE_2D,
        level: 0,
        resource: 'stone',
        internalFormat: WebGLRenderingContext.RGB,
        format: WebGLRenderingContext.RGB,
        type: WebGLRenderingContext.UNSIGNED_BYTE,
        filterMag: WebGLRenderingContext.NEAREST_MIPMAP_NEAREST,
        filterMin: WebGLRenderingContext.NEAREST_MIPMAP_LINEAR,
        wrapS: WebGLRenderingContext.REPEAT, //CLAMP_TO_EDGE,
        wrapT: WebGLRenderingContext.REPEAT, //CLAMP_TO_EDGE,
        blend: 0,
    },
    brick: {
        target: WebGLRenderingContext.TEXTURE_2D,
        level: 0,
        resource: 'brick',
        internalFormat: WebGLRenderingContext.RGB,
        format: WebGLRenderingContext.RGB,
        type: WebGLRenderingContext.UNSIGNED_BYTE,
        filterMag: WebGLRenderingContext.NEAREST,//NEAREST_MIPMAP_NEAREST,
        filterMin: WebGLRenderingContext.NEAREST,//NEAREST_MIPMAP_LINEAR,
        wrapS: WebGLRenderingContext.REPEAT, //CLAMP_TO_EDGE,
        wrapT: WebGLRenderingContext.REPEAT, //CLAMP_TO_EDGE,
        blend: 0,
    },
    orientation: {
        target: WebGLRenderingContext.TEXTURE_2D,
        level: 0,
        resource: 'orientation',
        internalFormat: WebGLRenderingContext.RGB,
        format: WebGLRenderingContext.RGB,
        type: WebGLRenderingContext.UNSIGNED_BYTE,
        filterMag: WebGLRenderingContext.NEAREST,//NEAREST,
        filterMin: WebGLRenderingContext.NEAREST,//NEAREST,
        wrapS: WebGLRenderingContext.REPEAT,
        wrapT: WebGLRenderingContext.REPEAT,
        blend: 0,
    }
} as S3DTexturePropsMap;